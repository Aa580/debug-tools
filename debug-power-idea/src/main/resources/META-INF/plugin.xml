<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>io.github.future0923.DebugPower</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>DebugPower</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="future94@qq.com" url="https://github.com/future0923">future0923</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    Quickly call Java methods:
    <br>
    Quick Debugging <a href="https://github.com/future0923/debug-power">github</a> | <a href="https://gitee.com/future94/debug-power">gitee</a>
    <ul>
        <li>First, open the ToolWindow of Debug Power on the right, click + and select the service you want to attach (the service should already be started).</li>
        <li>Then wake up the right-click menu in the method body to be called and click Quick Debug.</li>
        <li>Pass in the type and corresponding value corresponding to the parameter, and click Run to quickly call it.</li>
        <li>If you want to log in to authentication and other functions, you can specify the Authorization Header, which will mock a request and add this request header to the RequestContextHolder in Spring, so that you can obtain it later. Debug Power ToolWindow is global scope, Quick Debug is the current method, if the same, Quick Debug higher priority.</li>
        <li>You can view the execution result through toString, json, and debug.</li>
        <li>If you want to quickly execute the last request, you can right-click the menu and click Execute Last.</li>
    </ul>
    <ul>
        <li>首先，打开右侧的Debug Power的ToolWindow，点击 + 选择要你要attach的服务（服务要已经是启动完成的状态）</li>
        <li>然后在要调用方法体中唤醒右键菜单并点击 Quick Debug</li>
        <li>传入参数对应的类型与对应的值，点击运行即可快速调用</li>
        <li>如果要登录认证等功能，可以指定AuthorizationHeader，它会模拟一个请求，并将这个请求头添加到Spring中的RequestContextHolder，以便以后获取。Debug Power ToolWindow中是全局范围，Quick Debug中是当前方法，如果相同，Quick Debug优先级更高。</li>
        <li>你可以通过toString、json、debug的方式查看执行结果</li>
        <li>如果您想快速执行上次的请求，可以右键菜单中点击Execute Last</li>
    </ul>
  ]]></description>

    <change-notes>
        <![CDATA[
        <strong>2.2.0</strong>
        <ul>
            <li>Support toString、json、debug to view the returned results</li>
            <li>Support console、debug to view tAhe exception results</li>
            <li>Support org.springframework.web.multipart.MultipartFile param type</li>
            <li>Optimize style</li>
            <li>Fix recursive stack overflow exception when parameters are nested</li>
        </ul>
        <ul>
            <li>支持toString、json、debug的方式查看返回结果</li>
            <li>支持console、debug的方式查看异常信息</li>
            <li>支持org.springframework.web.multipart.MultipartFile类型参数</li>
            <li>样式优化</li>
            <li>修复参数嵌套时的递归堆栈溢出异常</li>
        </ul>
        ]]>
    </change-notes>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.java</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <!--定义自己的Extensions文件格式与目录-->
        <scratch.rootType implementation="io.github.future0923.debug.power.idea.extensions.ScratchDebugPowerRootType"/>
        <!--扩展文件写入访问权限，允许插件在非项目文件中进行写操作。-->
        <nonProjectFileWritingAccessExtension
                implementation="io.github.future0923.debug.power.idea.extensions.MakePluginFilesAlwaysEditable"/>

        <!--状态配置-->
        <projectService serviceImplementation="io.github.future0923.debug.power.idea.setting.DebugPowerSettingState"/>

        <!--设置-->
        <projectConfigurable instance="io.github.future0923.debug.power.idea.setting.DebugPowerSettingConfigurable"
                             id="DebugPowerTool.Setting"
                             displayName="DebugPower"
                             nonDefaultProject="true"/>

        <toolWindow id="DebugPower"
                    anchor="right"
                    secondary="false"
                    icon="/icon/project.svg"
                    order="last"
                    canCloseContents="false"
                    factoryClass="io.github.future0923.debug.power.idea.tool.DebugPowerToolWindowFactory"/>

        <!--通知-->
        <applicationService serviceImplementation="io.github.future0923.debug.power.idea.utils.DebugPowerNotifierUtil"/>
        <notificationGroup id="DebugPower" displayType="BALLOON"/>

        <!--json编辑器代码提示-->
        <completion.contributor language="JSON"
                                implementationClass="io.github.future0923.debug.power.idea.completion.DebugPowerJsonEditorCompletionContributor"/>

        <!--json编辑器代码导航-->
        <lang.directNavigationProvider
                implementation="io.github.future0923.debug.power.idea.navigation.DebugPowerJsonEditorDirectNavigationProvider"/>
    </extensions>

    <actions>
        <group id="DebugPowerTool">
            <separator/>
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <action id="DebugPowerTool.QuickDebug"
                    class="io.github.future0923.debug.power.idea.action.QuickDebugEditorPopupMenuAction"
                    text="Quick Debug"
                    description="Quickly call to the current location for execution">
                <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl M"/>
            </action>
            <action id="DebugPowerTool.ExecuteLast"
                    class="io.github.future0923.debug.power.idea.action.ExecuteLastEditorPopupMenuAction"
                    text="Execute Last"
                    description="Quickly call last for execution">
                <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl L"/>
            </action>
            <action id="DebugPowerTool.EvaluateGroovy"
                    class="io.github.future0923.debug.power.idea.action.EvaluateGroovyAction"
                    text="Evaluate Groovy"
                    description="Evaluate groovy script for attach application">
                <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl E"/>
            </action>
            <separator/>
        </group>
        <group id="DebugPowerRun">
            <separator/>
            <add-to-group group-id="RunContextGroup"  anchor="last" />
            <action id="DebugPower.RunGroovy"
                    text="Run Current Groovy"
                    icon="AllIcons.Actions.Execute"
                    description="Run current groovy"
                    class="io.github.future0923.debug.power.idea.action.RunGroovyAction"/>
            <separator/>
        </group>
    </actions>

    <applicationListeners>
        <listener class="io.github.future0923.debug.power.idea.listener.idea.DebugPowerExecutionListener"
                  topic="com.intellij.execution.ExecutionListener"/>
    </applicationListeners>
</idea-plugin>